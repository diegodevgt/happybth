{"version":3,"sources":["views/pages/login/Login.js","api/apiHandler.js"],"names":["Login","addToast","useToasts","history","useHistory","useState","username","password","login","setLogin","login_success","setLoginSuccess","useEffect","user","reactLocalStorage","getObject","Object","keys","length","console","log","undefined","token","push","handleChange","e","target","id","value","form_object","JSON","parse","stringify","new_data","onSubmit","a","preventDefault","error","labels","entries","key","appearance","autoDismiss","autoDismissTimeout","test","String","toLowerCase","object_login","email","remember_me","loginUser","dataApi","valid","result","response","setObject","data","access_token","className","md","style","border","background","fluid","src","name","type","onChange","placeholder","autoComplete","xs","color","width","onClick","borderBottom","marginBottom","marginLeft","marginRight","paddingLeft","to","backgroundColor","authUser","config","headers","axios","get","conf","base_url","res","method","url"],"mappings":"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","file":"static/js/23.19e7e506.chunk.js","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CImg,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {reactLocalStorage} from 'reactjs-localstorage';\r\nimport { ToastProvider, useToasts } from 'react-toast-notifications';\r\nimport axios from 'axios';\r\nimport { loginUser } from 'src/api/apiHandler';\r\nimport { data } from 'react-dom-factories';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nconst Login = () => {\r\n  const { addToast } = useToasts();\r\n  const history = useHistory();\r\n  const [login, setLogin] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const [login_success, setLoginSuccess] = useState(false);\r\n  \r\n  useEffect(()=>{\r\n    const user = reactLocalStorage.getObject('user');\r\n    if(Object.keys(user).length > 0){\r\n      console.log(user);\r\n      if(user !== 'undefined' && user !== undefined && user !== null){\r\n        console.log('teeeeeeeeest');\r\n        if(user.token.length > 0){\r\n          history.push('/creacion-pedido');\r\n        }\r\n      }\r\n   }\r\n  },[])\r\n\r\n  const handleChange = (e) => {\r\n    const {id, value} = e.target;\r\n    const form_object = JSON.parse(JSON.stringify(login));\r\n    let new_data = {\r\n        ...form_object,\r\n        [id]: value\r\n    };\r\n    console.log(new_data);\r\n    setLogin(new_data);\r\n  }\r\n\r\n  const responseGoogle = (response) => {\r\n    console.log(response);\r\n  }  \r\n\r\n\r\n  const onSubmit = async (e) =>{\r\n    e.preventDefault();\r\n    let error = false;\r\n    let labels = {\r\n      username: \"Correo Electrónico\",\r\n      password: \"Contraseña\"\r\n  };\r\n\r\n    for (const [key, value] of Object.entries(login)) {\r\n        if(value.length === 0){\r\n            addToast(`El campo ${labels[key]} es requerido`, { \r\n                appearance: 'error', \r\n                autoDismiss : true ,\r\n                autoDismissTimeout : 4000\r\n            });\r\n            error = true;\r\n        }\r\n    }\r\n\r\n    const em = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if(!em.test(String(login.username).toLowerCase())){\r\n        addToast(`El Correo Electrónico no es valido`, { \r\n            appearance: 'error', \r\n            autoDismiss : true ,\r\n            autoDismissTimeout : 4000\r\n        });\r\n        error = true;\r\n    }\r\n\r\n    if(error){\r\n      return false;\r\n    }\r\n\r\n    let object_login = {\r\n      email: login.username,\r\n      password: login.password,\r\n      remember_me: true\r\n    }\r\n\r\n    const dataApi = await loginUser(object_login);\r\n    console.log(dataApi);\r\n    if(dataApi.valid && !login_success){\r\n      setLoginSuccess(true)\r\n      let result = dataApi.response;\r\n      console.log(result);\r\n        addToast(`Login Exitoso`, { \r\n            appearance: 'success', \r\n            autoDismiss : true ,\r\n            autoDismissTimeout : 4000\r\n        });\r\n        reactLocalStorage.setObject('user', {\r\n          'email': login.username,\r\n          'token': result.data.access_token,\r\n          'plan': 'pro'\r\n        });\r\n\r\n        setLogin({\r\n          username: \"\",\r\n          password: \"\"\r\n        })\r\n\r\n        history.push('/creacion-pedido');\r\n \r\n    }else{\r\n      let error = dataApi.response;\r\n      if (error.response) {\r\n        console.log(error.response);\r\n        addToast(`Usuario o Contraseña incorrectos`, { \r\n            appearance: 'error', \r\n            autoDismiss : true ,\r\n            autoDismissTimeout : 4000\r\n        });\r\n      }\r\n    }\r\n    \r\n\r\n    // axios({\r\n    //   method: 'post',\r\n    //   url: 'https://ws.conectaguate.com/api/auth/login',\r\n    //   data: object_login,\r\n    //   headers: {\"Access-Control-Allow-Origin\": \"*\"}\r\n    // }).then(\r\n    //   (result) => {\r\n    //          },\r\n    //   (error) => {\r\n       \r\n    //   }\r\n    // );\r\n\r\n  }\r\n\r\n  return (\r\n    // <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer className=\"login-container\">\r\n        <CRow className=\"login-row\">\r\n          <CCol md=\"6\" className=\"login-col\">\r\n            <CContainer>\r\n              <CRow className=\"align-items-center login-panel\">\r\n                <CCardGroup className=\"login-left-panel\">\r\n                <CCard className=\"card-container\" style={{border: '0px', background: '#ebedef'}}>\r\n                  <CCardBody>\r\n                    <CForm>\r\n                      <CImg \r\n                          fluid\r\n                          src={\"img/logo_conecta.png\"}\r\n                          className=\"logo-img\"\r\n                      />\r\n                      <p className=\"text-center subtitle\">Iniciar Sesión</p>\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-envelope-closed\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"username\"  onChange={handleChange} value={login.username} placeholder=\"Tu correo electrónico\" autoComplete=\"username\"  style={{background:'white', border: '0px'}}/>\r\n                      </CInputGroup>\r\n                      <CInputGroup className=\"mb-1\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-lock-locked\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"password\" id=\"password\"  onChange={handleChange} value={login.password} placeholder=\"Tu contraseña\" autoComplete=\"current-password\" style={{background:'white', border: '0px'}}/>\r\n                      </CInputGroup>\r\n                      <CRow>\r\n                        <CCol xs=\"12\" className=\"text-left\">\r\n                          <CButton color=\"link\" >¿Olvidaste tu contraseña?</CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <CRow>\r\n                        <CCol xs=\"12\">\r\n                          <CButton color=\"primary\" className=\"px-12\" style={{width: '100%', background:'#7979e7'}} onClick={onSubmit}>Continuar</CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                      {/* Separate */}\r\n                      <CRow style={{\r\n                            width:'100%', \r\n                            borderBottom:'2px solid #153b75',\r\n                            marginBottom: '1rem',\r\n                            marginLeft: 'auto',\r\n                            marginRight: 'auto'\r\n                          }}>\r\n                        &nbsp;\r\n                      </CRow>\r\n\r\n                      {/* <CRow>\r\n                        <CCol xs=\"12\">\r\n                          <CButton \r\n                            color=\"primary\" \r\n                            className=\"px-12\" \r\n                            style={{\r\n                              width: '100%', \r\n                              background:'#143B74', \r\n                              border: '1px solid #143B74',\r\n                              textAlign: 'left'\r\n                            }} \r\n                            to=\"/creacion-pedido\">\r\n                              <CImg \r\n                                    className=\"social-icon-button\"\r\n                                    src=\"/img/icons/facebook.svg\"\r\n                                    onClick={()=>{\r\n                                        window.open('https://www.facebook.com/ConectaGuateOficial/', '_blank').focus();\r\n                                    }}\r\n                                />\r\n                              Iniciar Sesión con Facebook\r\n                            </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <br/>\r\n                      <CRow>\r\n                        <CCol \r\n                          xs=\"12\" \r\n                          style={{\r\n                              display: 'block',\r\n                              marginLeft: 'auto',\r\n                              marginRight:'auto',\r\n                              position: 'relative'\r\n                            }} \r\n                          className=\"login_google\"\r\n                          >\r\n                          <GoogleLogin\r\n                            clientId=\"619638783948-v4fp9d2b59r0fb7nfi6cpqteja0dai69.apps.googleusercontent.com\"\r\n                            buttonText=\"Iniciar Sesión con Google\"\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={responseGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                            style={{width: '100%', display:'block'}}\r\n                          />\r\n                        </CCol>\r\n                      </CRow> */}\r\n                      <CRow>\r\n                        <CCol xs=\"12\" className=\"text-left\">\r\n                          ¿No tienes cuenta? <CButton color=\"link\" style={{paddingLeft: '3px'}} to=\"/register\">Registrate</CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CForm>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCardGroup>\r\n              </CRow>\r\n            </CContainer>\r\n          </CCol>\r\n          <CCol md=\"6\" className=\"login-col-right\">\r\n              <CContainer>\r\n                  <CRow className=\"align-items-center login-card-right\">\r\n                    <CCardGroup className=\"login-right-panel\">\r\n                      <CCard className=\"p-4 card-container-right\" style={{backgroundColor: 'white'}}>\r\n                              <CRow className=\"image-card\">\r\n                                <CImg \r\n                                    className=\"img-card-info\"\r\n                                    src=\"/img/hero/card-info.jpg\"\r\n                                />\r\n                              </CRow>\r\n                      </CCard>\r\n                    </CCardGroup>\r\n                  </CRow>\r\n              </CContainer>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    // </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","\r\nimport axios from 'axios';\r\nimport conf from './conf.json';\r\n\r\n\r\n// Get current users profile\r\nexport const authUser = async (token) => {\r\n    let bearer = \"Bearer \"+token;\r\n    const config = {\r\n        headers: { \r\n            \"Authorization\": bearer\r\n        }\r\n    };\r\n    let response;\r\n    try {\r\n        const res  = await axios.get(\r\n            conf.base_url+'/auth/user',\r\n            config\r\n        );\r\n        response = {\r\n            valid: true,\r\n            response: res\r\n        }; \r\n    } catch (err) {\r\n        response = {\r\n            valid: false,\r\n            response: err\r\n        };\r\n    }\r\n    return response;\r\n};\r\n\r\n\r\nexport const loginUser = async (data) => {\r\n    let response;\r\n    // const headers = {\"Access-Control-Allow-Origin\": \"*\"};\r\n\r\n    try {\r\n\r\n        const res = await axios({\r\n            method: 'post',\r\n            url: 'https://ws.conectaguate.com/api/auth/login',\r\n            data: data,\r\n          });\r\n\r\n        // const res  = await axios.post(\r\n        //     conf.base_url+'/auth/login',\r\n        //     data,\r\n        //     // headers\r\n        // );\r\n        response = {\r\n            valid: true,\r\n            response: res\r\n        }; \r\n    } catch (err) {\r\n        response = {\r\n            valid: false,\r\n            response: err\r\n        };\r\n    }\r\n    return response;\r\n};"],"sourceRoot":""}