{"version":3,"sources":["views/pages/dashboard/cell_renderer/ButtonCellRenderer.jsx","views/pages/dashboard/cell_renderer/DescargarCellRenderer.jsx","views/pages/dashboard/cell_renderer/IdCellRenderer.jsx","views/pages/dashboard/MisEnvios.jsx"],"names":["BtnCellRenderer","props","btnClickedHandler","bind","this","clicked","value","name","onClick","src","fluid","style","width","cursor","Component","DescargarCellRenderer","marginLeft","marginRight","display","IdCellRenderer","background","color","marginTop","textAlign","paddingLeft","paddingRight","paddingBottom","paddingTop","borderRadius","lineHeight","MisEnvios","size","useState","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","history","useHistory","number_rows","setNumberRows","aggrid","setAggrid","loading","setLoading","Date","startDate","setStartDate","endDate","setEndDate","input_search","setInputSearch","setUser","transportes","setTransportes","estatus","setEstatus","tipos_de_pago","setTiposDePago","columnDefs","headerName","field","cellRenderer","cellRendererParams","alert","haederName","url","getUrl","location","baseUrl","protocol","host","pathname","split","open","focus","rowData","defaultColDef","resizable","column_definitions","setColumnDefinitions","user_object","reactLocalStorage","getObject","Object","keys","length","remove","push","base_url","Promise","resolve","reject","axios","method","headers","token","then","data","key","all","values","forEach","elem","obj","id","console","log","onFilterTextBoxChanged","api","setQuickFilter","document","getElementById","bearer","config","get","response","data_arr","created_at","date","year","getFullYear","month","getMonth","dt","getDate","fecha_creacion","object","pedido","destinatario","nombre_destino","destino","direccion_destino","tipo_de_envio","tipo_pago","nombre","estado","status","link","guia","date_created","fecha_entrega","rowDataWithoutFilter","className","sm","type","placeholder","border","onChange","e","target","selected","maxDate","dateFormat","minDate","col","md","xl","block","fontWeight","date_filter","filter","start","end","date_filtered","exportDataAsCsv","paginationSetPageSize","Number","onPageSizeChanged","padding","marginBottom","reactUi","animateRows","rowSelection","groupSelectsChildren","suppressRowClickSelection","onGridReady","params","column_api","columnApi","isMobile","sizeColumnsToFit","frameworkComponents","btnCellRenderer","ButtonCellRenderer","btnCellRendererDescargar","idBtnCellRenderer","pagination","paginationPageSize"],"mappings":"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","file":"static/js/29.6f70a4c8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    CImg,\r\n  } from '@coreui/react'\r\n\r\nexport default class BtnCellRenderer extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.btnClickedHandler = this.btnClickedHandler.bind(this);\r\n    }\r\n    btnClickedHandler() {\r\n     this.props.clicked(this.props.value);\r\n    }\r\n    render() {\r\n      return (\r\n        <CImg\r\n            name=\"cil-file\"\r\n            onClick={this.btnClickedHandler}\r\n            src={`img/icons/mis-envios/guia.svg`}\r\n            fluid\r\n            style={{width:'40px', cursor:'pointer'}}\r\n        />\r\n      )\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport {\r\n    CImg,\r\n  } from '@coreui/react'\r\n\r\nexport default class DescargarCellRenderer extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.btnClickedHandler = this.btnClickedHandler.bind(this);\r\n    }\r\n    btnClickedHandler() {\r\n     this.props.clicked(this.props.value);\r\n    }\r\n    render() {\r\n      return (\r\n        <CImg\r\n            name=\"cil-action-undo\"\r\n            onClick={this.btnClickedHandler}\r\n            src={`img/icons/mis-envios/exportar.svg`}\r\n            fluid\r\n            style={{width:'40px', cursor:'pointer', marginLeft:'auto', marginRight: 'auto', display:'block'}}\r\n        />\r\n      )\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport CIcon from '@coreui/icons-react';\r\n\r\nexport default class IdCellRenderer extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.btnClickedHandler = this.btnClickedHandler.bind(this);\r\n    }\r\n    btnClickedHandler() {\r\n     this.props.clicked(this.props.value);\r\n    }\r\n\r\n    render() {\r\n        let background = '';\r\n        let color = '';\r\n        switch(this.props.value){\r\n            case 'Cancelado':\r\n                background = '#e67e22';\r\n                color = '#ffffff';\r\n                break;\r\n            case 'Liquidado':\r\n                background = '#3498db';\r\n                color = '#ffffff';\r\n                break;\r\n            case 'Devolucion':\r\n                background = '#e67e22';\r\n                color = '#ffffff';\r\n                break;\r\n            case 'Recibido':\r\n                background = '#bdc3c7';\r\n                color = '#000000';\r\n                break;\r\n            case 'Creado':\r\n                background = '#bdc3c7';\r\n                color = '#000000';\r\n                break;\r\n            case 'Almacen':\r\n                background = '#9b59b6';\r\n                color = '#ffffff';\r\n                break;\r\n            case 'Transito':\r\n                background = '#f1c40f';\r\n                color = '#ffffff';\r\n                break;\r\n            case 'Completada':\r\n                background = '#2ecc71';\r\n                color = '#ffffff';\r\n                break;\r\n            default:\r\n                ;\r\n        }\r\n      return (\r\n          <div \r\n            style={{\r\n                display:'block',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                marginTop: '.5rem'\r\n            }}>\r\n              <p style={{\r\n                  background: background,\r\n                  color: color,\r\n                  textAlign:'center',\r\n                  display:'block',\r\n                  marginLeft: 'auto',\r\n                  marginRight: 'auto',\r\n                  width: 'fit-content',\r\n                  paddingLeft: '.3rem',\r\n                  paddingRight: '.3rem',\r\n                  paddingBottom: '.05rem',\r\n                  paddingTop: '.05rem',\r\n                  borderRadius: '15px',\r\n                  lineHeight: '30px'\r\n              }}>\r\n                    {this.props.value}\r\n                </p>\r\n          </div>\r\n        \r\n      )\r\n    }\r\n  }","import React, { lazy, Fragment, useState, useEffect, useRef} from 'react'\r\nimport {isMobile} from 'react-device-detect';\r\nimport {\r\n    CBadge,\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CProgress,\r\n    CRow,\r\n    CCallout,\r\n    CFormGroup,\r\n    CLabel,\r\n    CInput,\r\n    CSwitch,\r\n    CInputGroupAppend,\r\n    CInputGroup,\r\n    CInputGroupText,\r\n    CContainer,\r\n    CCollapse,\r\n    CSelect,\r\n    CImg\r\n  } from '@coreui/react'\r\n  import { ToastProvider, useToasts } from 'react-toast-notifications';\r\n  import axios from 'axios';\r\n  import { \r\n      useHistory,\r\n      useRouteMatch,\r\n      useParams\r\n  } from \"react-router-dom\";\r\n  import { AgGridReact, AgGridColumn } from 'ag-grid-react';\r\n  import 'ag-grid-community/dist/styles/ag-grid.css';\r\n  import 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n  import 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n  import CIcon from '@coreui/icons-react';\r\n  import DatePicker from \"react-datepicker\";\r\n\r\n  import \"react-datepicker/dist/react-datepicker.css\";\r\n  import ButtonCellRenderer from './cell_renderer/ButtonCellRenderer'\r\n  import DescargarCellRenderer from './cell_renderer/DescargarCellRenderer'\r\n  import IdCellRenderer from './cell_renderer/IdCellRenderer'\r\n  import {reactLocalStorage} from 'reactjs-localstorage';\r\n\r\n\r\nfunction MisEnvios(props) {\r\n    const size = useWindowSize();\r\n    const history = useHistory();\r\n    const [number_rows, setNumberRows] = useState(\"20\");\r\n    const [aggrid,  setAggrid] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [input_search, setInputSearch] = useState(\"\");\r\n    const [user, setUser] = useState({});\r\n    const [transportes, setTransportes] = useState(null);\r\n    const [estatus, setEstatus] = useState(null);\r\n    const [tipos_de_pago, setTiposDePago] = useState(null);\r\n    const [column_definitions, setColumnDefinitions] = useState({\r\n        columnDefs: [\r\n            { \r\n                headerName: 'Pedido', \r\n                field: 'pedido',\r\n            },\r\n            { \r\n                headerName: 'Destinatario', \r\n                field: 'destinatario' },\r\n            { \r\n                headerName: 'Destino', \r\n                field: 'destino' },\r\n            { \r\n                headerName: 'Tipo de envio', \r\n                field: 'tipo_de_envio' },\r\n            { \r\n                headerName: 'Creación', \r\n                field: 'fecha_creacion' },\r\n            { \r\n                headerName: 'Entrega', \r\n                field: 'fecha_entrega' },\r\n            { \r\n                headerName: 'Estado', \r\n                field: 'estado',\r\n                cellRenderer: 'idBtnCellRenderer',\r\n                cellRendererParams: {\r\n                    clicked: function(field) {\r\n                    alert(`${field} was clicked`);\r\n                    },\r\n                }, \r\n            },\r\n            { \r\n                haederName: '',  \r\n                field: 'Descargar',\r\n                cellRenderer: 'btnCellRendererDescargar',\r\n                cellRendererParams: {\r\n                    clicked: function(url) {\r\n                        let  getUrl = window.location;\r\n                        let  baseUrl = getUrl.protocol + \"//\" + getUrl.host + \"/\" + getUrl.pathname.split('/')[1];\r\n                        url = `${baseUrl}#/tracking/${url}`\r\n                        window.open(url, '_blank').focus();\r\n                    },\r\n                  },\r\n            },\r\n            { \r\n                haederName: '',  \r\n                field: 'link',\r\n                cellRenderer: 'btnCellRenderer',\r\n                cellRendererParams: {\r\n                    clicked: function(url) {\r\n                        let  getUrl = window.location;\r\n                        let  baseUrl = getUrl.protocol + \"//\" + getUrl.host + \"/\" + getUrl.pathname.split('/')[1];\r\n                        url = `${baseUrl}#/tracking/${url}`\r\n                        window.open(url, '_blank').focus();\r\n                    },\r\n                  },\r\n            }\r\n        ],\r\n        rowData: [],\r\n        defaultColDef: {\r\n            resizable: true,\r\n        }\r\n    });\r\n\r\n    function randomDate(start, end) {\r\n        return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n    }\r\n      \r\n\r\n    // Hook\r\n    function useWindowSize() {\r\n        // Initialize state with undefined width/height so server and client renders match\r\n        // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n        const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined,\r\n        });\r\n        useEffect(() => {\r\n        // Handler to call on window resize\r\n        function handleResize() {\r\n            // Set window width/height to state\r\n            setWindowSize({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            });\r\n        }\r\n        // Add event listener\r\n        window.addEventListener(\"resize\", handleResize);\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n        }, []); // Empty array ensures that effect is only run on mount\r\n        return windowSize;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setColumnDefinitions({\r\n            ...column_definitions,\r\n        })\r\n        setLoading(true);\r\n\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        const user_object = reactLocalStorage.getObject('user');\r\n\r\n        if(user_object === 'undefined' || user_object === undefined || user_object === null || Object.keys(user_object).length === 0){\r\n            reactLocalStorage.remove('user');\r\n            setUser({});\r\n            history.push('/login');\r\n            return false;\r\n        }\r\n        let base_url = 'https://ws.conectaguate.com/api'\r\n\r\n        let transportes = new Promise((resolve, reject) => axios({method:'get',url:base_url+'/v1/site/transportes',headers: {'Authorization': `Bearer ${user_object.token}`}}).then((data)=>resolve({key: 'transportes', data:data.data['Data']},'transportes')));\r\n        let estatus = new Promise((resolve, reject) => axios({method:'get',url:base_url+'/v1/site/estatus',headers: {'Authorization': `Bearer ${user_object.token}`}}).then((data)=>resolve({key: 'estatus', data:data.data['Data']},'estatus')));\r\n        let tipos_de_pago = new Promise((resolve, reject) => axios({method:'get',url:base_url+'/v1/site/tipopago',headers: {'Authorization': `Bearer ${user_object.token}`}}).then((data)=>resolve({key: 'tipos_de_pago', data:data.data['Data']},'tipos_de_pago')));\r\n\r\n        Promise.all([transportes,estatus,tipos_de_pago]).then((values) => {\r\n            values.forEach((elem)=>{\r\n                let obj = {};\r\n                switch(elem.key){\r\n                    case 'transportes':\r\n                        elem.data.forEach((elem)=>{\r\n                            obj[elem.id] = elem;\r\n                        })\r\n                        setTransportes(obj);\r\n                        break;\r\n                    case 'estatus':\r\n                        elem.data.forEach((elem)=>{\r\n                            obj[elem.id] = elem;\r\n                        })\r\n                        setEstatus(obj);\r\n                        break;\r\n                    case 'tipos_de_pago':\r\n                        elem.data.forEach((elem)=>{\r\n                            obj[elem.id] = elem;\r\n                        })\r\n                        setTiposDePago(obj);\r\n                        break;\r\n                    default:\r\n                        ;\r\n                }\r\n            })\r\n            console.log(values);\r\n        });\r\n    },[]);\r\n\r\n    const handleChange = (e) =>{\r\n        const {name, value} = e.target;\r\n        setInputSearch(value);\r\n        onFilterTextBoxChanged();\r\n    }\r\n\r\n    const onGridReady = (params) =>{\r\n        setAggrid({api: params.api, column_api:params.columnApi});\r\n        if(!isMobile || size > 992) {\r\n            params.api.sizeColumnsToFit();\r\n        }   \r\n    }\r\n\r\n    const onFilterTextBoxChanged = () => {\r\n        aggrid.api.setQuickFilter(document.getElementById('guia').value);\r\n    }\r\n\r\n    const onBtnExport = () => {\r\n        aggrid.api.exportDataAsCsv();\r\n    };\r\n\r\n    const onPageSizeChanged = () => {\r\n        var value = document.getElementById('page-size').value;\r\n        aggrid.api.paginationSetPageSize(Number(value));\r\n        setNumberRows(value);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(transportes !== null && estatus !== null && tipos_de_pago !== null){\r\n            const user_object = reactLocalStorage.getObject('user');\r\n            let bearer = \"\";\r\n            console.log(user_object);\r\n\r\n            if(user_object === 'undefined' || user_object === undefined || user_object === null || Object.keys(user_object).length === 0){\r\n                reactLocalStorage.remove('user');\r\n                history.push('/login');\r\n            }else{  \r\n                bearer =  `Bearer ${user_object.token}`;\r\n            }   \r\n\r\n            const config = {\r\n                headers: { \r\n                    \"Authorization\": bearer\r\n                }\r\n            };\r\n\r\n            axios.get(\r\n                'https://ws.conectaguate.com/api/v1/site/user/pedidos/',\r\n                config\r\n            ).then((response)=>{\r\n                let data_arr = [];\r\n                let data = response.data['Data'];\r\n                let i = 1;\r\n\r\n                data.forEach((elem)=>{\r\n                    console.log(elem);\r\n                    if(elem.created_at){\r\n                        let date = new Date(elem.created_at);\r\n                        let year = date.getFullYear();\r\n                        let month = date.getMonth()+1;\r\n                        let dt = date.getDate();\r\n                        if (dt < 10) {\r\n                        dt = '0' + dt;\r\n                        }\r\n                        if (month < 10) {\r\n                        month = '0' + month;\r\n                        }\r\n                        elem.fecha_creacion = dt+'/'+month+'/'+year;\r\n                    }\r\n                \r\n\r\n                    let object ={ \r\n                        pedido: elem.id, \r\n                        destinatario: elem.nombre_destino, \r\n                        destino: elem.direccion_destino,\r\n                        tipo_de_envio: tipos_de_pago[elem.tipo_pago].nombre, \r\n                        estado: elem.status, \r\n                        link: elem.guia,\r\n                        fecha_creacion: elem.fecha_creacion,\r\n                        date_created: elem.created_at,\r\n                        fecha_entrega: \"\"\r\n                    };\r\n                    data_arr.push(object);\r\n                    i++;\r\n                })\r\n\r\n                setColumnDefinitions({\r\n                    ...column_definitions,\r\n                    rowData: data_arr,\r\n                    rowDataWithoutFilter: data_arr\r\n                })\r\n            });\r\n        }\r\n    },[transportes, estatus, tipos_de_pago]);\r\n\r\n\r\n    const searchDate = () =>{\r\n        let data = column_definitions.rowDataWithoutFilter;\r\n        let date_filter = data.filter((elem)=>{\r\n            let start = new Date(startDate);\r\n            let end = new Date(endDate);\r\n            let date_filtered = new Date(elem.date_created);\r\n            if(date_filtered > start && date_filtered < end){\r\n                return true;\r\n            }\r\n        })\r\n        setColumnDefinitions({\r\n            ...column_definitions,\r\n            rowData: date_filter\r\n        })\r\n    }\r\n    \r\n\r\n    return (\r\n        (loading) ?\r\n        <>\r\n        <div className=\"mis-envios-container\">\r\n                <CRow>\r\n                    <CCol sm=\"12\">\r\n                        <CCard className=\"card-header\">\r\n                            <div className=\"mis-envios-title\">\r\n                                Monitorea tus pedidos\r\n                            </div>\r\n                        </CCard>    \r\n                       \r\n                    </CCol>\r\n                </CRow>  \r\n                <CRow className=\"filter-container\">\r\n                    <CCol sm=\"3\" className=\"filter-row-responsive\">\r\n                        <CRow>\r\n                            No. de Guía\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CInput \r\n                                type=\"text\" \r\n                                id=\"guia\" \r\n                                className=\"filter-container-input\"  \r\n                                value={input_search}\r\n                                placeholder=\"\" \r\n                                style={{background:'white', border: '0px'}}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </CRow>\r\n                    </CCol>\r\n                    <CCol sm=\"3\" className=\"filter-row-responsive\">\r\n                        <CRow>\r\n                            Inicio\r\n                        </CRow>\r\n                        <CRow>\r\n                            <DatePicker \r\n                                selected={startDate}\r\n                                id=\"fecha-ini\" \r\n                                className=\"filter-container-input form-control\"  \r\n                                onChange={(date) => {\r\n                                    console.log(date);\r\n                                    setStartDate(date)\r\n                                }} \r\n                                style={{\r\n                                    background:'white', \r\n                                    border: '0px',\r\n                                    textAlign: 'left'\r\n                                }}\r\n                                maxDate={endDate}\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                             />\r\n                        </CRow>\r\n                    </CCol>\r\n                    <CCol sm=\"3\" className=\"filter-row-responsive\">\r\n                        <CRow>\r\n                            Finalización\r\n                        </CRow>\r\n                        <CRow>\r\n                            <DatePicker \r\n                                selected={endDate}\r\n                                id=\"fecha-fin\" \r\n                                className=\"filter-container-input form-control\"  \r\n                                onChange={(date) => {\r\n                                    console.log(date);\r\n                                    setEndDate(date)\r\n                                }} \r\n                                style={{\r\n                                    background:'white', \r\n                                    border: '0px',\r\n                                    textAlign: 'left'\r\n                                }}\r\n                                minDate={startDate}\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                             />\r\n                        </CRow>\r\n                    </CCol>\r\n                    <CCol sm=\"3\">\r\n                        <CRow>\r\n                        &nbsp;\r\n                        </CRow>\r\n                        <CRow className=\"row_button_filters\">\r\n                            <CCol col=\"6\" sm=\"12\" md=\"12\" xl className=\"mb-3 mb-xl-0\">\r\n                                <CButton \r\n                                    block \r\n                                    className=\"button_filters\"\r\n                                    style={{\r\n                                        background:'#f3bf34', \r\n                                        fontWeight: '500'\r\n                                    }}\r\n                                    onClick={searchDate}\r\n                                    >   \r\n                                        <CRow>\r\n                                            <CCol sm=\"3\" \r\n                                                >\r\n                                                <CImg\r\n                                                src={`img/icons/mis-envios/buscar.svg`}\r\n                                                fluid\r\n                                                style={{width:'25px', cursor:'pointer'}}\r\n                                            />\r\n                                            </CCol>\r\n                                            <CCol\r\n                                                className=\"export_button\">\r\n                                                Aplicar\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                </CButton>\r\n                            </CCol>\r\n                            <CCol col=\"6\" sm=\"12\" md=\"12\" xl  className=\"mb-3 mb-xl-0\"> \r\n                                <CButton \r\n                                    block \r\n                                    className=\"button_filters\"\r\n                                    style={{\r\n                                        background:'#afc7ff', \r\n                                        fontWeight: '500'\r\n                                    }}\r\n                                    onClick={() => onBtnExport()}\r\n                                    >   \r\n                                        <CRow>\r\n                                            <CCol sm=\"3\" \r\n                                                >\r\n                                                <CImg\r\n                                                    src={`img/icons/mis-envios/exportar.svg`}\r\n                                                    fluid\r\n                                                    style={{width:'25px', cursor:'pointer'}}\r\n                                                />\r\n                                            </CCol>\r\n                                            <CCol\r\n                                                className=\"export_button\">\r\n                                                Exportar\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                </CButton>\r\n                            </CCol>\r\n                        </CRow>\r\n                    </CCol>\r\n                </CRow>  \r\n                <CRow className=\"table-container\">\r\n                    <CCol>\r\n                        <select \r\n                            id=\"page-size\"\r\n                            className=\"card-input\" \r\n                            onChange={() => onPageSizeChanged()} \r\n                            style={{\r\n                                background:'white', \r\n                                border: '0px', \r\n                                color: '#768192',\r\n                                marginLeft: '1rem',\r\n                                padding: '.5rem',\r\n                                borderRadius: '5px'\r\n                            }} \r\n                            value={number_rows}\r\n                        >\r\n                            <option value=\"20\">\r\n                                20\r\n                            </option>\r\n                            <option value=\"50\">50</option>\r\n                            <option value=\"100\">100</option>\r\n                            <option value=\"1000\">All</option>\r\n                        </select>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow className=\"table-container\" style={{marginBottom: '2rem'}}>\r\n                    <CCol sm=\"12\">\r\n                        <div id=\"myGrid\" style={{height: '600px'}} className=\"ag-theme-material\">\r\n                        <AgGridReact \r\n\r\n                            // turn on AG Grid React UI\r\n                            reactUi=\"true\"\r\n                            className=\"ag-theme-material\"\r\n                            animateRows=\"true\"\r\n                            columnDefs={column_definitions.columnDefs}\r\n                            rowData={column_definitions.rowData}\r\n                            rowSelection=\"multiple\"\r\n                            groupSelectsChildren=\"true\"\r\n                            suppressRowClickSelection=\"true\"\r\n                            onGridReady={onGridReady}\r\n                            frameworkComponents={{\r\n                                btnCellRenderer: ButtonCellRenderer,\r\n                                btnCellRendererDescargar: DescargarCellRenderer,\r\n                                idBtnCellRenderer: IdCellRenderer\r\n                            }}\r\n                            pagination={true}\r\n                            paginationPageSize={10}\r\n                            defaultColDef={column_definitions.defaultColDef}\r\n                            />\r\n                        </div>\r\n                    </CCol>\r\n                </CRow>\r\n        </div>\r\n        </> : <></>\r\n    )\r\n}\r\n\r\nMisEnvios.propTypes = {\r\n\r\n}\r\n\r\nexport default MisEnvios\r\n\r\n"],"sourceRoot":""}